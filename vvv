public class Solution {
    public int[] searchRange(final int[] A, int B) {
        int start = findFirstOccurrence(A, B);
        int end = findLastOccurrence(A, B);
        
        return new int[]{start, end};
    }

    private int findFirstOccurrence(final int[] A, int B) {
        int low = 0, high = A.length - 1;
        int result = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (A[mid] == B) {
                result = mid;
                high = mid - 1;
            } else if (A[mid] < B) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return result;
    }

    private int findLastOccurrence(final int[] A, int B) {
        int low = 0, high = A.length - 1;
        int result = -1;

        while (low <= high) {
            int mid = low + (high - low) / 2;

            if (A[mid] == B) {
                result = mid;
                low = mid + 1;
            } else if (A[mid] < B) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        return result;
    }
}
